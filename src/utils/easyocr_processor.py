# src/utils/ocr_processor.py
import easyocr
import logging
import tempfile
from typing import Optional

logger = logging.getLogger(__name__)

class OCRProcessor:
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º EasyOCR —Å —Ä—É—Å—Å–∫–∏–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º —è–∑—ã–∫–∞–º–∏
        try:
            self.reader = easyocr.Reader(
                ['ru', 'en'], 
                gpu=False,  # –ù–∞ CPU –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                download_enabled=True
            )
            logger.info("‚úÖ EasyOCR –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å —Ä—É—Å—Å–∫–∏–º —è–∑—ã–∫–æ–º")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ EasyOCR: {e}")
            self.reader = None

    def extract_text_from_image(self, image_path: str) -> Optional[str]:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
        if not self.reader:
            return "–û—à–∏–±–∫–∞: OCR –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–∞—Å–ø–æ—Ä—Ç–æ–≤
            results = self.reader.readtext(
                image_path,
                detail=0,  # –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç, –±–µ–∑ –¥–µ—Ç–∞–ª–µ–π
                paragraph=True,  # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –≤ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã
                contrast_ths=0.3,  # –£–ª—É—á—à–∞–µ–º –∫–æ–Ω—Ç—Ä–∞—Å—Ç
                adjust_contrast=0.7,  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
                text_threshold=0.5,  # –ü–æ—Ä–æ–≥ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
                mag_ratio=2.0  # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
            )
            
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            full_text = '\n'.join(results)
            logger.info(f"üìù EasyOCR —Ä–∞—Å–ø–æ–∑–Ω–∞–ª —Ç–µ–∫—Å—Ç: {len(full_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            logger.debug(f"–¢–µ–∫—Å—Ç: {full_text}")
            
            return full_text if full_text else "–¢–µ–∫—Å—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω"
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ OCR: {e}")
            return f"–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}"